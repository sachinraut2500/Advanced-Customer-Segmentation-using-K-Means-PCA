# -*- coding: utf-8 -*-
"""Advanced Customer Segmentation using K-Means + PCA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pKYgrwW1BbCxeOcU-7lO2w31ebT7-_yO
"""

import pandas as pd
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

def load_data():
    # Example synthetic data - replace with real dataset
    np.random.seed(42)
    data = pd.DataFrame({
        'Age': np.random.randint(18, 70, 500),
        'Income': np.random.randint(30000, 120000, 500),
        'SpendingScore': np.random.randint(1, 100, 500),
        'Savings': np.random.randint(0, 50000, 500),
        'Debt': np.random.randint(0, 30000, 500)
    })
    return data

def main():
    data = load_data()

    scaler = StandardScaler()
    data_scaled = scaler.fit_transform(data)

    pca = PCA(n_components=2)
    pca_data = pca.fit_transform(data_scaled)

    kmeans = KMeans(n_clusters=4, random_state=42)
    labels = kmeans.fit_predict(pca_data)

    plt.figure(figsize=(8,6))
    scatter = plt.scatter(pca_data[:,0], pca_data[:,1], c=labels, cmap='viridis')
    plt.xlabel('PCA Component 1')
    plt.ylabel('PCA Component 2')
    plt.title('Customer Segmentation with KMeans + PCA')
    plt.legend(*scatter.legend_elements(), title="Clusters")
    plt.show()

if __name__ == "__main__":
    main()